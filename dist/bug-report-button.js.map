{
  "version": 3,
  "sources": ["../bug-report-button.js"],
  "sourcesContent": ["import ScreenshotButton from 'https://grispiapp.github.io/screenshot-button-web-component/screenshot-button.js';\n\nconst textareaPlaceholderText = '(Optional) Message or bug description';\nconst sendButtonText = 'Send';\nconst sendButtonLoadingText = 'Sending...';\nconst cancelText = 'Cancel';\nconst errorText = 'Error';\nconst timeoutErrorMessage = '(TIMEOUT) Sending might not be successful, time out occurred!';\n\nconst sendTimeoutDefault = '10000';\nconst noPermitScreenCaptureImgUrl = 'https://i.imgur.com/MXRT775.png';\n\nexport default class BugReportButton extends HTMLElement {\n\n  static SEND_EVENT_NAME = 'BugReportButton:Send'\n\n  static SENDING_DONE_EVENT_NAME = 'BugReportButton:SendingDone'\n\n  static #htmlContent = `\n  \t\t\t<style>\n  \t\t\t  button {\n  \t\t\t    cursor: pointer;\n  \t\t\t  }\n  \t\t\t  section {\n  \t\t\t    backdrop-filter: blur(3px);\n            bottom: 0;\n            display: none;\n            height: auto;\n            left: 0;\n            padding: 50px;\n            position: fixed;\n            right: 0;\n            top: 0;\n            overflow: auto;\n            width: auto;\n  \t\t\t  }\n  \t\t\t  header {\n  \t\t\t      text-align: right;\n  \t\t\t  }\n  \t\t\t  main {\n            background: #f7f7f7;\n            border-radius: 3px;\n            border: 1px solid #b3adad;\n            min-height: 600px;\n            min-width: 600px;\n            padding: 1% 10%;\n            position: relative;\n  \t\t\t  }\n  \t\t\t  main > div {\n            display: flex;\n            flex-direction: column;\n  \t\t\t  }\n  \t\t\t  screenshot-button {\n  \t\t\t    display: none;\n  \t\t\t  }\n  \t\t\t  textarea {\n  \t\t\t      margin: 20px auto;\n  \t\t\t      min-width: 600px;\n  \t\t\t  }\n          #closeBtn {\n            background: none;\n            border: 0;\n            color: #555;\n            font-family: sans-serif;\n            font-size: 1.2rem;\n            position: absolute;\n            right: 20px;\n          }\n          #closeBtn:hover {\n            color: #000;\n          }\n        \t#actionBtn {\n            background-color: lightgray;\n            border-radius: 5px;\n            border: 1px solid #333;\n            color: #333;\n            display: flex;\n            font-family: sans-serif;\n            font-size: 13pt;\n            height: 30px;\n            justify-content: center;\n            padding-top: 3px;\n            position: fixed;\n            right: -65px;\n            top: 50%;\n            transform: rotate(-90deg);\n            min-width: 150px;\n        }\n        #cancelBtn, #sendBtn {\n          background: #f7f7f7;\n          border-radius: 3px;\n          border: 1px solid #b3adad;\n          color: #333;\n          padding: 10px 20px;\n        }\n        #cancelBtn:hover, #sendBtn:hover {\n          background: #eee;\n        }\n        #captureErrorMsg {\n          text-align: center;\n          color: darkred;\n        }\n        #preview {\n          display: block;\n          margin-left: auto;\n          margin-right: auto;\n        }\n        </style>\n        <screenshot-button></screenshot-button>\n        <button id=\"actionBtn\"></button>\n        <section id=\"popup\">\n          <main>\n            <button id=\"closeBtn\">X</button>\n            <div>\n                <img id=\"preview\" src=\"\" alt=\"Screenshot preview\"/>\n                <em id=\"captureErrorMsg\"></em>\n                <textarea rows=\"5\" placeholder=\"${textareaPlaceholderText}\"></textarea>\n                <div style=\" text-align: center; \">\n                  <button id=\"cancelBtn\">${cancelText}</button>\n                  <button id=\"sendBtn\" style=\" font-weight: bold; \">${sendButtonText}</button>\n                </div>\n              </div>\n          </main>\n        </section>\n      `;\n\n  #screenshotButton;\n  #previewImg;\n  #captureErrorMsg;\n  #popup;\n  #screenshotAsBlob;\n  #textarea;\n  #sendBtn;\n  #sendTimeout;\n  #sendTimeoutHandle;\n\n  constructor() {\n    super();\n\n    const text = this.attributes.getNamedItem('text')?.value || 'Bug Report';\n    this.#sendTimeout = this.attributes.getNamedItem('send-timeout')?.value || sendTimeoutDefault;\n\n    const shadowDom = this.attachShadow({\n      mode: 'open'\n    });\n    shadowDom.innerHTML = BugReportButton.#htmlContent;\n    const button = shadowDom.getElementById('actionBtn');\n    button.innerText = text;\n    button.onclick = this.#clickCallback.bind(this);\n\n    this.#screenshotButton = shadowDom.querySelector('screenshot-button');\n    this.#previewImg = shadowDom.getElementById('preview');\n    this.#captureErrorMsg = shadowDom.getElementById('captureErrorMsg');\n    this.#popup = shadowDom.getElementById('popup');\n    this.#sendBtn = shadowDom.getElementById('sendBtn');\n    this.#textarea = shadowDom.querySelector('textarea');\n    const closePopupFn = this.#hidePopup.bind(this);\n    shadowDom.getElementById('closeBtn').onclick = closePopupFn;\n    shadowDom.getElementById('cancelBtn').onclick = closePopupFn;\n\n    this.#sendBtn.onclick = this.#send.bind(this);\n    window.document.addEventListener(BugReportButton.SENDING_DONE_EVENT_NAME, this.#sendingDone.bind(this));\n  }\n\n  #clickCallback() {\n    this.#screenshotButton\n      .takeScreenshot()\n      .then(blob => {\n        this.#showPopup(blob);\n        this.#screenshotAsBlob = blob;\n      })\n      .catch(e => {\n        this.#showPopup(null, e);\n      });\n  }\n\n  #showPopup(blob, error) {\n    const imgEl = this.#previewImg;\n    imgEl.removeAttribute('width');\n    imgEl.onload = null;\n\n    if (blob) {\n      imgEl.src = URL.createObjectURL(blob);\n      imgEl.onload = () => {\n        imgEl.width = imgEl.width * 0.4;\n      };\n    } else {\n      imgEl.src = noPermitScreenCaptureImgUrl;\n      this.#captureErrorMsg.innerText = `${errorText}: ${error}`;\n    }\n\n    this.#popup.style.display = 'block';\n  }\n\n  #hidePopup() {\n    this.#popup.style.display = 'none';\n    this.#captureErrorMsg.innerText = '';\n    this.#screenshotAsBlob = null;\n  }\n\n  #send() {\n    const payload = {\n      screenshot: this.#screenshotAsBlob,\n      message: this.#textarea.value\n    };\n    window.document.dispatchEvent(new CustomEvent(BugReportButton.SEND_EVENT_NAME, {detail: payload}));\n    this.#startLoading();\n  }\n\n  #sendingDone(e) {\n    clearTimeout(this.#sendTimeoutHandle);\n    const eventDetail = e.detail;\n    this.#endLoading(eventDetail?.message, eventDetail?.success, eventDetail?.keepPopupOpenOnSuccess);\n  }\n\n  #startLoading() {\n    this.#sendBtn.innerText = sendButtonLoadingText;\n    this.shadowRoot.querySelectorAll('button, textarea').forEach(el => el.disabled = true);\n\n    if (this.#sendTimeout > 0) {\n      this.#sendTimeoutHandle = setTimeout(() => {\n        document.dispatchEvent(new CustomEvent(BugReportButton.SENDING_DONE_EVENT_NAME, {detail: {message: timeoutErrorMessage}}))\n      }, this.#sendTimeout);\n    }\n  }\n\n  #endLoading(message, success, keepPopupOpenOnSuccess) {\n    this.shadowRoot.querySelectorAll('button, textarea').forEach(el => el.disabled = false);\n    this.#sendBtn.innerText = sendButtonText;\n\n    const prefix = success ? '' : `[${errorText}]: `;\n    alert(prefix + message);\n\n    if (success === true && keepPopupOpenOnSuccess !== true) {\n      this.#hidePopup();\n    }\n  }\n\n}\n\nwindow.customElements.define('bug-report-button', BugReportButton);\n"],
  "mappings": "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",
  "names": ["textareaPlaceholderText", "sendButtonText", "sendButtonLoadingText", "cancelText", "errorText", "timeoutErrorMessage", "sendTimeoutDefault", "noPermitScreenCaptureImgUrl", "BugReportButton", "#htmlContent", "#screenshotButton", "#previewImg", "#captureErrorMsg", "#popup", "#screenshotAsBlob", "#textarea", "#sendBtn", "#sendTimeout", "#sendTimeoutHandle", "text", "shadowDom", "button", "#clickCallback", "closePopupFn", "#hidePopup", "#send", "#sendingDone", "blob", "#showPopup", "error", "imgEl", "payload", "#startLoading", "eventDetail", "#endLoading", "el", "message", "success", "keepPopupOpenOnSuccess", "prefix"]
}
